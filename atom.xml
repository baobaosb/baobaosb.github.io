<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BaoBao</title>
  
  <subtitle>努力实现编程梦</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://baobaosb.github.io/"/>
  <updated>2019-09-21T01:27:51.765Z</updated>
  <id>http://baobaosb.github.io/</id>
  
  <author>
    <name>BaoBao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker安装与使用</title>
    <link href="http://baobaosb.github.io/2019/09/21/docker/"/>
    <id>http://baobaosb.github.io/2019/09/21/docker/</id>
    <published>2019-09-21T01:21:36.938Z</published>
    <updated>2019-09-21T01:27:51.765Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.docker.com" target="_blank" rel="noopener">Docker</a>是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。</p><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a><strong>Docker安装</strong></h2><h3 id="1-使用储存库安装："><a href="#1-使用储存库安装：" class="headerlink" title="1.使用储存库安装："></a>1.使用储存库安装：</h3><ul><li><p>安装所需的包。yum-utils提供了yum-config-manager 效用，并device-mapper-persistent-data和lvm2由需要 devicemapper存储驱动程序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install -y yum-utils \</span><br><span class="line">  device-mapper-persistent-data \</span><br><span class="line">  lvm2</span><br></pre></td></tr></table></figure></li><li><p>使用以下命令设置稳定存储库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-安装最新版本的Docker-Engine-社区和容器："><a href="#2-安装最新版本的Docker-Engine-社区和容器：" class="headerlink" title="2.安装最新版本的Docker Engine - 社区和容器："></a>2.安装最新版本的Docker Engine - 社区和容器：</h3><pre><code>$ sudo yum install docker-ce docker-ce-cli containerd.io</code></pre><h3 id="3-启动Docker容器"><a href="#3-启动Docker容器" class="headerlink" title="3.启动Docker容器"></a>3.启动Docker容器</h3><pre><code>$ sudo systemctl start docker</code></pre><h2 id="Docker-Tomcat安装"><a href="#Docker-Tomcat安装" class="headerlink" title="Docker Tomcat安装"></a><strong>Docker Tomcat安装</strong></h2><h3 id="1-安装Tomcat服务器："><a href="#1-安装Tomcat服务器：" class="headerlink" title="1.安装Tomcat服务器："></a>1.安装Tomcat服务器：</h3><ul><li>安装一个名为mycat，端口8080改为13080的Tomcat服务器。<pre><code>$ docker run -d --name  mycat  -p 13080:8080 tomcat:8.0</code></pre></li></ul><h3 id="2-启动Tomcat："><a href="#2-启动Tomcat：" class="headerlink" title="2.启动Tomcat："></a>2.启动Tomcat：</h3><pre><code>$ docker start mycat</code></pre><h3 id="3-打开-http-kansuv-info-13080-来访问Tomcat-kansuv-info改为你的服务器域名或者IP-："><a href="#3-打开-http-kansuv-info-13080-来访问Tomcat-kansuv-info改为你的服务器域名或者IP-：" class="headerlink" title="3.打开 http://kansuv.info:13080 来访问Tomcat (kansuv.info改为你的服务器域名或者IP)："></a>3.打开 <a href="http://kansuv.info:13080" target="_blank" rel="noopener">http://kansuv.info:13080</a> 来访问Tomcat (kansuv.info改为你的服务器域名或者IP)：</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/tomcat.png" alt="tomcat" title>                </div>                <div class="image-caption">tomcat</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.docker.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Docker&lt;/a&gt;是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Wind
      
    
    </summary>
    
      <category term="Docker" scheme="http://baobaosb.github.io/categories/Docker/"/>
    
    
      <category term="Docker" scheme="http://baobaosb.github.io/tags/Docker/"/>
    
      <category term="容器" scheme="http://baobaosb.github.io/tags/%E5%AE%B9%E5%99%A8/"/>
    
      <category term="linux" scheme="http://baobaosb.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客框架的搭建与使用</title>
    <link href="http://baobaosb.github.io/2019/09/20/hexo/"/>
    <id>http://baobaosb.github.io/2019/09/20/hexo/</id>
    <published>2019-09-20T08:48:07.784Z</published>
    <updated>2019-09-20T09:24:50.326Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> 是一个快速、简洁且高效的博客框架。<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页<a id="more"></a>。</p><h2 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a><strong>博客搭建</strong></h2><h3 id="1-环境准备："><a href="#1-环境准备：" class="headerlink" title="1.环境准备："></a>1.环境准备：</h3><pre><code>安装node.js和git</code></pre><h3 id="2-安装hexo框架："><a href="#2-安装hexo框架：" class="headerlink" title="2.安装hexo框架："></a>2.安装hexo框架：</h3><pre><code>$ npm i hexo-cli -g</code></pre><h3 id="3-项目初始化："><a href="#3-项目初始化：" class="headerlink" title="3.项目初始化："></a>3.项目初始化：</h3><pre><code>$ hexo init</code></pre><h3 id="4-本地端口浏览：（hexo-s）"><a href="#4-本地端口浏览：（hexo-s）" class="headerlink" title="4.本地端口浏览：（hexo s）"></a>4.本地端口浏览：（hexo s）</h3><pre><code>$ hexo server</code></pre><h3 id="5-生成静态文件：（hexo-g）"><a href="#5-生成静态文件：（hexo-g）" class="headerlink" title="5.生成静态文件：（hexo g）"></a>5.生成静态文件：（hexo g）</h3><pre><code>$ hexo generate</code></pre><h3 id="6-安装部署插件："><a href="#6-安装部署插件：" class="headerlink" title="6.安装部署插件："></a>6.安装部署插件：</h3><pre><code>$ npm i hexo-deployer-git -s</code></pre><h3 id="7-配置根目录-config-jml文件："><a href="#7-配置根目录-config-jml文件：" class="headerlink" title="7.配置根目录_config.jml文件："></a>7.配置根目录_config.jml文件：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">type: git</span><br><span class="line">repo: 仓库地址</span><br></pre></td></tr></table></figure><h3 id="8-网站语言设置为中文："><a href="#8-网站语言设置为中文：" class="headerlink" title="8.网站语言设置为中文："></a>8.网站语言设置为中文：</h3><p> language: zh-CN</p><h3 id="9-推送部署：（hexo-d）"><a href="#9-推送部署：（hexo-d）" class="headerlink" title="9.推送部署：（hexo d）"></a>9.推送部署：（hexo d）</h3><pre><code>$ hexo deploy</code></pre><h3 id="10-开启仓库page服务"><a href="#10-开启仓库page服务" class="headerlink" title="10.开启仓库page服务"></a>10.开启仓库page服务</h3><p>注：如果没有样式，需修改_config.yml文件找到 url 和 root 进行配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url: http://博客地址 </span><br><span class="line">root: /博客项目名</span><br></pre></td></tr></table></figure><h2 id="主题更换"><a href="#主题更换" class="headerlink" title="主题更换"></a><strong>主题更换</strong></h2><p>1.下载主题项目文件夹，将主题文件夹放到 blog/themes 目录下<br>2.配置根目录_config.jml文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#Extensions</span><br><span class="line">theme: 主题名称  //即主题项目文件夹的名称</span><br></pre></td></tr></table></figure><p>3.重新生成资源文件并推送：$ hexo g -d</p><h2 id="博文发布"><a href="#博文发布" class="headerlink" title="博文发布"></a><strong>博文发布</strong></h2><p>hexo n 文件名：<em>新建文章</em><br>hexo clean：<em>清空资源文件</em><br>hexo g：<em>重新生成资源文件</em><br>hexo d：<em>发布文章到仓库.io</em><br>(最后两步可简写为：hexo g -d)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt; 是一个快速、简洁且高效的博客框架。&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt; 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页
    
    </summary>
    
      <category term="hexo博客框架" scheme="http://baobaosb.github.io/categories/hexo%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="博客搭建" scheme="http://baobaosb.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="hexo" scheme="http://baobaosb.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://baobaosb.github.io/2019/06/03/hello-world/"/>
    <id>http://baobaosb.github.io/2019/06/03/hello-world/</id>
    <published>2019-06-03T10:02:53.865Z</published>
    <updated>2019-09-20T09:15:36.507Z</updated>
    
    <content type="html"><![CDATA[<p>亲爱的朋友,欢迎来到我的博客,这是我的第一个博客网站……<br>作为技术渣,目前个人技术不成熟,对于博客方面不是很了解,还有很多地方没配置好,后面会慢慢的修改,也欢迎大家指出问题,谢谢！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;亲爱的朋友,欢迎来到我的博客,这是我的第一个博客网站……&lt;br&gt;作为技术渣,目前个人技术不成熟,对于博客方面不是很了解,还有很多地方没配置好,后面会慢慢的修改,也欢迎大家指出问题,谢谢！！！&lt;/p&gt;

      
    
    </summary>
    
      <category term="Hello World" scheme="http://baobaosb.github.io/categories/Hello-World/"/>
    
    
      <category term="Hello World" scheme="http://baobaosb.github.io/tags/Hello-World/"/>
    
  </entry>
  
</feed>
